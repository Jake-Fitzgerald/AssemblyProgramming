00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 11/02/2024 18:25:36

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000                            11  * Notes:
00001000                            12  
00001000                            13  * MULU
00001000                            14  * multiply a WORD of the destination operand by the WORD of the source operand.
00001000                            15  * The result is saved in long-word in the destination operand
00001000                            16  
00001000  303C 0003                 17      MOVE.W #$3, D0      ; Put literal 3 into address D0. D0 now stores 3.
00001004                            18      
00001004  223C 01020002             19      MOVE.L #$1020002, D1   ; Put literal 1020002 into D1.
0000100A  C2C0                      20      MULU D0, D1         ; Multiply D0 (3) by D1 (1020002) = 6? Should be 3060006.
0000100C                            21                          ; However we are only mulitplying the word of D1 (0002).
0000100C                            22                          ; So it's really (3) by (2) = 6.
0000100C                            23   
0000100C  303C 0003                 24      MOVE.W #$3, D0      ; Put literal 3 into D0 (3 replaces 3).
00001010  223C 01020002             25      MOVE.L #$1020002, D1 ; Replace 6 with literal 1020002.
00001016  C2C0                      26      MULU.W D0, D1       ; D0 (3) by D1 (1020002) is 6,
00001018                            27                          ; since are only multiplying by word.
00001018                            28      
00001018  283C 0000FFC0             29      MOVE.L #$0000FFC0, D4  # Negative from 8000 to FFFF ; here FFC0 is -0040
0000101E  C9FC 0010                 30      MULS.W    #$0010,D4   # 10 x -400 = -0000 0400  check results in D4
00001022                            31  
00001022                            32  
00001022  FFFF FFFF                 33      SIMHALT             ; halt simulator
00001026                            34  
00001026                            35  * Put variables and constants here
00001026                            36  
00001026                            37      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
START               1000

00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 18/01/2024 14:07:27

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Hello World
00000000                             3  * Written by : Jake Fitzgerald
00000000                             4  * Date       : 18/01/2024
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000                             7      
00001000                             8  START:  ORG    $1000             ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000                            11  
00001000                            12  *----- Code -----
00001000  43F9 00001012             13      LEA     MESSAGE,A1  *Loads message into address register at A1 (LEA - Load Effective Address)
00001006  103C 000E                 14      MOVE.B  #14,D0      *Moves the number 14 into data register D0 (Move byte)
0000100A  4E4F                      15      TRAP    #15         *Displays message
0000100C                            16      
0000100C  103C 0009                 17     MOVE.B  #9,D0
00001010  4E4F                      18     TRAP    #15         *Halt simulator
00001012                            19     
00001012                            20                         *Carriage return means to return to the beginning of the current
00001012                            21                         * line without advancing downward.
00001012                            22                         *This means is will go to the left hand side of the our output window
00001012                            23                         *Like a dang' ol' typewrite mang'
00001012                            24                         
00001012                            25                         *LF (Line Feed) is a new line ---> same as '/n'
00001012                            26     
00001012  =0000000D                 27  CR  EQU    $0D         *ASCII code for carriage return
00001012  =0000000A                 28  LF  EQU    $0A         *ASCII code for Line Feed 
00001012= 48 45 4C 4C 4F 20 ...     29  MESSAGE DC.B    'HELLO WORLD',CR,LF    *Place ASCII string in memory at MESSAGE
0000101F= 54 68 69 73 20 69 ...     30          DC.B    'This is another new line',CR,LF
00001039= 57 6F 77 7A 65 72 ...     31          DC.B    'Wowzers!',CR,LF,CR,LF
00001045= 53 6B 69 70 20 6F ...     32          DC.B    'Skip one line',CR,LF
00001054= 57 61 74 63 68 20 ...     33          DC.B    'Watch this brother',LF,' next line but no Carriage Return',CR,LF
0000108A= 4C 61 73 74 20 6C ...     34          DC.B    'Last line has to have a zero to end it',CR,LF,0
000010B3                            35     
000010B3                            36  * Put variables and constants here
000010B3                            37  
000010B3                            38      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CR                  D
LF                  A
MESSAGE             1012
START               1000
